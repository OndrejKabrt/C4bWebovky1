openapi: 3.0.0
info:
  title: Notes API
  description: API for managing notes and users.
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /api/notes:
    get:
      summary: Get all notes
      responses:
        200:
          description: A list of notes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    contents:
                      type: string
    post:
      summary: Create a new note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                contents:
                  type: string
      responses:
        201:
          description: Note created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  contents:
                    type: string
  /api/note/{id}:
    get:
      summary: Get a note by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the note
          schema:
            type: string
      responses:
        200:
          description: A note object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  contents:
                    type: string
        404:
          description: Note not found
    delete:
      summary: Delete a note by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the note to delete
          schema:
            type: string
      responses:
        200:
          description: Note deleted successfully
        404:
          description: Note not found
    patch:
      summary: Update a note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                content:
                  type: string
      responses:
        200:
          description: Note updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  contents:
                    type: string
        404:
          description: Note not found
  /api/users:
    get:
      summary: Get a list of users
      responses:
        200:
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    username:
                      type: string
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
  /api/user/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
      responses:
        200:
          description: A user object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
        404:
          description: User not found
    patch:
      summary: Update a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                content:
                  type: string
      responses:
        200:
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
        404:
          description: User not found
